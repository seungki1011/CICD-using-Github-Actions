name: CI Pipeline

# Event: Pull Request가 test 브랜치로 들어올 때 실행
on:
  pull_request:
    branches:
      - test

# Jobs: 필요한 Job을 병렬 또는 순차적으로 실행
jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리에서 소스 코드를 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Gradle 라이브러리 캐싱
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 3. Java 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'azul'
          java-version: '17'

      # 4. 의존성 설치 및 빌드
      - name: Build with Gradle
        run: ./gradlew build --no-daemon

  # Test Job
  test:
    runs-on: ubuntu-latest
    needs: build  # build Job이 완료된 후 실행됨

    # 5. 테스트 실행
    steps:
      - name: Run tests
        run: ./gradlew test --no-daemon